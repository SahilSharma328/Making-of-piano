

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jan 13 15:11:17 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10  0000                     
    11                           ; Version 1.45
    12                           ; Generated 16/11/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC18F45K22 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     _ANSELD	set	3899
    46  0000                     _T2CONbits	set	4026
    47  0000                     _PIR1bits	set	3998
    48  0000                     _TMR2	set	4028
    49  0000                     _CCPR1L	set	4030
    50  0000                     _PORTDbits	set	3971
    51  0000                     _T2CON	set	4026
    52  0000                     _PR2	set	4027
    53  0000                     _CCP1CON	set	4029
    54  0000                     _TRISD	set	3989
    55  0000                     _TRISC	set	3988
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  007F30                     __pcinit:
    61                           	opt stack 0
    62  007F30                     start_initialization:
    63                           	opt stack 0
    64  007F30                     __initialization:
    65                           	opt stack 0
    66  007F30                     end_of_initialization:
    67                           	opt stack 0
    68  007F30                     __end_of__initialization:
    69                           	opt stack 0
    70  007F30  0100               	movlb	0
    71  007F32  EF9B  F03F         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	cstackCOMRAM
    74  000001                     __pcstackCOMRAM:
    75                           	opt stack 0
    76  000001                     ??_main:
    77                           
    78                           ; 1 bytes @ 0x0
    79  000001                     	ds	2
    80                           
    81 ;;
    82 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    83 ;;
    84 ;; *************** function _main *****************
    85 ;; Defined at:
    86 ;;		line 89 in file "Automation-10.c"
    87 ;; Parameters:    Size  Location     Type
    88 ;;		None
    89 ;; Auto vars:     Size  Location     Type
    90 ;;		None
    91 ;; Return value:  Size  Location     Type
    92 ;;                  1    wreg      void 
    93 ;; Registers used:
    94 ;;		wreg, status,2
    95 ;; Tracked objects:
    96 ;;		On entry : 0/0
    97 ;;		On exit  : 0/0
    98 ;;		Unchanged: 0/0
    99 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   100 ;;      Params:         0       0       0       0       0       0       0
   101 ;;      Locals:         0       0       0       0       0       0       0
   102 ;;      Temps:          2       0       0       0       0       0       0
   103 ;;      Totals:         2       0       0       0       0       0       0
   104 ;;Total ram usage:        2 bytes
   105 ;; This function calls:
   106 ;;		Nothing
   107 ;; This function is called by:
   108 ;;		Startup code after reset
   109 ;; This function uses a non-reentrant model
   110 ;;
   111                           
   112                           	psect	text0
   113  007F36                     __ptext0:
   114                           	opt stack 0
   115  007F36                     _main:
   116                           	opt stack 31
   117                           
   118                           ;Automation-10.c: 91: ANSELD=0;
   119                           
   120                           ;incstack = 0
   121  007F36  0E00               	movlw	0
   122  007F38  010F               	movlb	15	; () banked
   123  007F3A  6F3B               	movwf	59,b	;volatile
   124                           
   125                           ;Automation-10.c: 92: TRISC=0x00;
   126  007F3C  0E00               	movlw	0
   127  007F3E  6E94               	movwf	3988,c	;volatile
   128                           
   129                           ;Automation-10.c: 93: TRISD=0b11111000;
   130  007F40  0EF8               	movlw	248
   131  007F42  6E95               	movwf	3989,c	;volatile
   132                           
   133                           ;Automation-10.c: 94: CCP1CON=0X3C;
   134  007F44  0E3C               	movlw	60
   135  007F46  6EBD               	movwf	4029,c	;volatile
   136                           
   137                           ;Automation-10.c: 95: PR2=100;
   138  007F48  0E64               	movlw	100
   139  007F4A  6EBB               	movwf	4027,c	;volatile
   140                           
   141                           ;Automation-10.c: 96: T2CON=0X01;
   142  007F4C  0E01               	movlw	1
   143  007F4E  6EBA               	movwf	4026,c	;volatile
   144  007F50                     
   145                           ;Automation-10.c: 98: {
   146                           ;Automation-10.c: 99: PORTDbits.RD0=1;PORTDbits.RD1=0;PORTDbits.RD2=0;
   147                           
   148                           ; BSR set to: 15
   149  007F50  8083               	bsf	3971,0,c	;volatile
   150  007F52  9283               	bcf	3971,1,c	;volatile
   151  007F54  9483               	bcf	3971,2,c	;volatile
   152                           
   153                           ;Automation-10.c: 100: _delay((unsigned long)((100)*(16000000/4000.0)));
   154  007F56  0E03               	movlw	3
   155  007F58  6E02               	movwf	(??_main+1)& (0+255),c
   156  007F5A  0E08               	movlw	8
   157  007F5C  6E01               	movwf	??_main& (0+255),c
   158  007F5E  0E77               	movlw	119
   159  007F60                     u117:
   160  007F60  2EE8               	decfsz	wreg,f,c
   161  007F62  D7FE               	bra	u117
   162  007F64  2E01               	decfsz	??_main& (0+255),f,c
   163  007F66  D7FC               	bra	u117
   164  007F68  2E02               	decfsz	(??_main+1)& (0+255),f,c
   165  007F6A  D7FA               	bra	u117
   166  007F6C  F000               	nop	
   167                           
   168                           ;Automation-10.c: 101: if(PORTDbits.RD3==1)
   169  007F6E  A683               	btfss	3971,3,c	;volatile
   170  007F70  D002               	goto	l30
   171                           
   172                           ;Automation-10.c: 102: {
   173                           ;Automation-10.c: 103: CCPR1L=25;
   174  007F72  0E19               	movlw	25
   175  007F74  D007               	goto	L2
   176  007F76                     l30:
   177                           
   178                           ;Automation-10.c: 105: else if(PORTDbits.RD4==1)
   179  007F76  A883               	btfss	3971,4,c	;volatile
   180  007F78  D002               	goto	l32
   181                           
   182                           ;Automation-10.c: 106: {
   183                           ;Automation-10.c: 107: CCPR1L=50;
   184  007F7A  0E32               	movlw	50
   185  007F7C  D003               	goto	L2
   186  007F7E                     l32:
   187                           
   188                           ;Automation-10.c: 109: else if(PORTDbits.RD5==1)
   189  007F7E  AA83               	btfss	3971,5,c	;volatile
   190  007F80  D002               	goto	l34
   191                           
   192                           ;Automation-10.c: 110: {
   193                           ;Automation-10.c: 111: CCPR1L=75;
   194  007F82  0E4B               	movlw	75
   195  007F84                     L2:
   196  007F84  6EBE               	movwf	4030,c	;volatile
   197  007F86                     l34:
   198                           
   199                           ;Automation-10.c: 112: }
   200                           ;Automation-10.c: 114: PORTDbits.RD0=0;PORTDbits.RD1=1;PORTDbits.RD2=0;
   201  007F86  9083               	bcf	3971,0,c	;volatile
   202  007F88  8283               	bsf	3971,1,c	;volatile
   203  007F8A  9483               	bcf	3971,2,c	;volatile
   204                           
   205                           ;Automation-10.c: 115: _delay((unsigned long)((100)*(16000000/4000.0)));
   206  007F8C  0E03               	movlw	3
   207  007F8E  6E02               	movwf	(??_main+1)& (0+255),c
   208  007F90  0E08               	movlw	8
   209  007F92  6E01               	movwf	??_main& (0+255),c
   210  007F94  0E77               	movlw	119
   211  007F96                     u127:
   212  007F96  2EE8               	decfsz	wreg,f,c
   213  007F98  D7FE               	bra	u127
   214  007F9A  2E01               	decfsz	??_main& (0+255),f,c
   215  007F9C  D7FC               	bra	u127
   216  007F9E  2E02               	decfsz	(??_main+1)& (0+255),f,c
   217  007FA0  D7FA               	bra	u127
   218  007FA2  F000               	nop	
   219                           
   220                           ;Automation-10.c: 116: if(PORTDbits.RD3==1)
   221  007FA4  A683               	btfss	3971,3,c	;volatile
   222  007FA6  D002               	goto	l35
   223                           
   224                           ;Automation-10.c: 117: {
   225                           ;Automation-10.c: 118: CCPR1L=40;
   226  007FA8  0E28               	movlw	40
   227  007FAA  D007               	goto	L4
   228  007FAC                     l35:
   229                           
   230                           ;Automation-10.c: 120: else if(PORTDbits.RD4==1)
   231  007FAC  A883               	btfss	3971,4,c	;volatile
   232  007FAE  D002               	goto	l37
   233                           
   234                           ;Automation-10.c: 121: {
   235                           ;Automation-10.c: 122: CCPR1L=50;
   236  007FB0  0E32               	movlw	50
   237  007FB2  D003               	goto	L4
   238  007FB4                     l37:
   239                           
   240                           ;Automation-10.c: 124: else if(PORTDbits.RD5==1)
   241  007FB4  AA83               	btfss	3971,5,c	;volatile
   242  007FB6  D002               	goto	l39
   243                           
   244                           ;Automation-10.c: 125: {
   245                           ;Automation-10.c: 126: CCPR1L=60;
   246  007FB8  0E3C               	movlw	60
   247  007FBA                     L4:
   248  007FBA  6EBE               	movwf	4030,c	;volatile
   249  007FBC                     l39:
   250                           
   251                           ;Automation-10.c: 127: }
   252                           ;Automation-10.c: 129: PORTDbits.RD0=0;PORTDbits.RD1=0;PORTDbits.RD2=1;
   253  007FBC  9083               	bcf	3971,0,c	;volatile
   254  007FBE  9283               	bcf	3971,1,c	;volatile
   255  007FC0  8483               	bsf	3971,2,c	;volatile
   256                           
   257                           ;Automation-10.c: 130: _delay((unsigned long)((100)*(16000000/4000.0)));
   258  007FC2  0E03               	movlw	3
   259  007FC4  6E02               	movwf	(??_main+1)& (0+255),c
   260  007FC6  0E08               	movlw	8
   261  007FC8  6E01               	movwf	??_main& (0+255),c
   262  007FCA  0E77               	movlw	119
   263  007FCC                     u137:
   264  007FCC  2EE8               	decfsz	wreg,f,c
   265  007FCE  D7FE               	bra	u137
   266  007FD0  2E01               	decfsz	??_main& (0+255),f,c
   267  007FD2  D7FC               	bra	u137
   268  007FD4  2E02               	decfsz	(??_main+1)& (0+255),f,c
   269  007FD6  D7FA               	bra	u137
   270  007FD8  F000               	nop	
   271                           
   272                           ;Automation-10.c: 131: if(PORTDbits.RD3==1)
   273  007FDA  A683               	btfss	3971,3,c	;volatile
   274  007FDC  D002               	goto	l40
   275                           
   276                           ;Automation-10.c: 132: {
   277                           ;Automation-10.c: 133: CCPR1L=70;
   278  007FDE  0E46               	movlw	70
   279  007FE0  D007               	goto	L6
   280  007FE2                     l40:
   281                           
   282                           ;Automation-10.c: 135: else if(PORTDbits.RD4==1)
   283  007FE2  A883               	btfss	3971,4,c	;volatile
   284  007FE4  D002               	goto	l42
   285                           
   286                           ;Automation-10.c: 136: {
   287                           ;Automation-10.c: 137: CCPR1L=80;
   288  007FE6  0E50               	movlw	80
   289  007FE8  D003               	goto	L6
   290  007FEA                     l42:
   291                           
   292                           ;Automation-10.c: 139: else if(PORTDbits.RD5==1)
   293  007FEA  AA83               	btfss	3971,5,c	;volatile
   294  007FEC  D002               	goto	l44
   295                           
   296                           ;Automation-10.c: 140: {
   297                           ;Automation-10.c: 141: CCPR1L=90;
   298  007FEE  0E5A               	movlw	90
   299  007FF0                     L6:
   300  007FF0  6EBE               	movwf	4030,c	;volatile
   301  007FF2                     l44:
   302                           
   303                           ;Automation-10.c: 142: }
   304                           ;Automation-10.c: 144: TMR2=0X00;
   305  007FF2  0E00               	movlw	0
   306  007FF4  6EBC               	movwf	4028,c	;volatile
   307                           
   308                           ;Automation-10.c: 145: PIR1bits.TMR2IF=0;
   309  007FF6  929E               	bcf	3998,1,c	;volatile
   310                           
   311                           ;Automation-10.c: 146: T2CONbits.TMR2ON=1;
   312  007FF8  84BA               	bsf	4026,2,c	;volatile
   313  007FFA  B29E               	btfsc	3998,1,c	;volatile
   314  007FFC  D7A9               	goto	l29
   315  007FFE  D7FD               	goto	l46
   316  008000                     __end_of_main:
   317                           	opt stack 0
   318  0000                     wreg	equ	0xFE8
   319                           wreg	equ	0xFE8
   320                           
   321                           	psect	rparam
   322  0000                     wreg	equ	0xFE8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
ABS                  0      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BIGRAM             5FF      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jan 13 15:11:17 2018

                     l30 7F76                       l40 7FE2                       l32 7F7E  
                     l42 7FEA                       l34 7F86                       l35 7FAC  
                     l44 7FF2                       l37 7FB4                       l29 7F50  
                     l46 7FFA                       l39 7FBC             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           __CFG_CPB$OFF 000000                      u117 7F60                      u127 7F96  
                    u137 7FCC                      _PR2 000FBB             __CFG_CPD$OFF 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     _TMR2 000FBC  
                   _main 7F36            __CFG_BORV$190 000000                     start 0000  
          __CFG_IESO$OFF 000000             ___param_bank 000000                    ?_main 0001  
                  _T2CON 000FBA                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000           __CFG_FOSC$HSMP 000000  
        __initialization 7F30             __end_of_main 8000                   ??_main 0001  
          __activetblptr 000000                   _CCPR1L 000FBE                   _ANSELD 000F3B  
         __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000          __CFG_HFOFST$OFF 000000  
             __accesstop 0060  __end_of__initialization 7F30          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001          __CFG_PLLCFG$OFF 000000  
     __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000                  _CCP1CON 000FBD  
      __CFG_PRICLKEN$OFF 000000          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000          __CFG_STVREN$OFF 000000                  __pcinit 7F30  
                __ramtop 0600                  __ptext0 7F36                _T2CONbits 000FBA  
   end_of_initialization 7F30                _PORTDbits 000F83      start_initialization 7F30  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTD2 000000  
          __size_of_main 00CA        __CFG_T3CMX$PORTC0 000000  
